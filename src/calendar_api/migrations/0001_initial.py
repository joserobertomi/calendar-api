# Generated by Django 3.2 on 2024-10-09 02:22

import calendar_api.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Convenio',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=32, validators=[calendar_api.validators.validade_char_lower_than_32])),
                ('inscricao', models.CharField(max_length=64, validators=[calendar_api.validators.validade_char_lower_than_64])),
            ],
            options={
                'permissions': [('convenio_list', 'Pode Listar todos Convenios na API'), ('convenio_retrieve', 'Pode recuperar um registro Convenio na API'), ('convenio_update', 'Pode atualizar Convenio na API'), ('convenio_partial_update', 'Pode atualizar parcialmente Convenio na API'), ('convenio_create', 'Pode criar Convenio na API'), ('convenio_destroy', 'Pode destruir Convenio na API')],
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cep', models.CharField(max_length=8, validators=[calendar_api.validators.validate_cep])),
                ('rua', models.CharField(max_length=32, validators=[calendar_api.validators.validade_char_lower_than_32])),
                ('bairro', models.CharField(max_length=32, validators=[calendar_api.validators.validade_char_lower_than_32])),
                ('numero', models.IntegerField(blank=True, null=True, validators=[calendar_api.validators.validate_integer])),
                ('quadra_lote', models.CharField(blank=True, max_length=16, null=True, validators=[calendar_api.validators.validade_char_lower_than_16])),
                ('cidade', models.CharField(max_length=32, validators=[calendar_api.validators.validade_char_lower_than_32])),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, validators=[calendar_api.validators.validate_state])),
                ('complemento', models.CharField(max_length=32, validators=[calendar_api.validators.validade_char_lower_than_32])),
            ],
            options={
                'permissions': [('endereco_list', 'Pode Listar todos Enderecos na API'), ('endereco_retrieve', 'Pode recuperar um registro Endereco na API'), ('endereco_update', 'Pode atualizar Endereco na API'), ('endereco_partial_update', 'Pode atualizar parcialmente Endereco na API'), ('endereco_create', 'Pode criar Enderecos na API'), ('endereco_destroy', 'Pode destruir Enderecos na API')],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=32, validators=[calendar_api.validators.validade_char_lower_than_32])),
                ('sobrenome', models.CharField(max_length=32, validators=[calendar_api.validators.validade_char_lower_than_32])),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[calendar_api.validators.validate_cpf])),
                ('rg', models.CharField(max_length=9, unique=True, validators=[calendar_api.validators.validate_rg])),
                ('orgao_expeditor', models.CharField(max_length=16, validators=[calendar_api.validators.validade_char_lower_than_16])),
                ('sexo', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino')], max_length=1)),
                ('celular', models.CharField(max_length=11, validators=[calendar_api.validators.validate_phone])),
                ('email', models.EmailField(max_length=254, validators=[calendar_api.validators.checkDns])),
                ('nascimento', models.DateField(validators=[calendar_api.validators.validate_date_not_130_years_later, calendar_api.validators.validate_date_not_newer_than_today])),
                ('convenio_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='calendar_api.convenio')),
                ('endereco_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='calendar_api.endereco')),
            ],
            options={
                'permissions': [('paciente_list', 'Pode Listar todos pacientes na API'), ('paciente_retrieve', 'Pode recuperar um registro de paciente na API'), ('paciente_update', 'Pode atualizar paciente na API'), ('paciente_partial_update', 'Pode atualizar parcialmente um paciente na API'), ('paciente_create', 'Pode criar paciente na API'), ('paciente_destroy', 'Pode destruir paciente na API')],
            },
        ),
        migrations.CreateModel(
            name='Procedimento',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=128, unique=True, validators=[calendar_api.validators.validade_char_lower_than_128])),
            ],
            options={
                'permissions': [('procedimento_list', 'Pode Listar todos procedimentos na API'), ('procedimento_retrieve', 'Pode recuperar um registro procedimentos na API'), ('procedimento_update', 'Pode atualizar procedimentos na API'), ('procedimento_partial_update', 'Pode atualizar parcialmente procedimentos na API'), ('procedimento_create', 'Pode criar procedimentos na API'), ('procedimento_destroy', 'Pode destruir procedimentos na API')],
            },
        ),
        migrations.CreateModel(
            name='Profissional',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=32, validators=[calendar_api.validators.validade_char_lower_than_32])),
                ('sobrenome', models.CharField(max_length=32, validators=[calendar_api.validators.validade_char_lower_than_32])),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[calendar_api.validators.validate_cpf])),
                ('uf_registro', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, validators=[calendar_api.validators.validate_state])),
                ('n_registro', models.PositiveIntegerField(validators=[calendar_api.validators.validate_integer, calendar_api.validators.validate_grater_than_1])),
                ('tipo_registro', models.CharField(choices=[('CRM', 'Conselho Regional de Medicina'), ('CRBM', 'Conselho Regional de Biomedicina'), ('CRO', 'Conselho Regional de Odontologia'), ('COREN', 'Conselho Regional de Enfermagem'), ('CRF', 'Conselho Regional de Farmácia'), ('CRN', 'Conselho Regional de Nutrição')], max_length=8, validators=[calendar_api.validators.validate_registers])),
                ('email', models.EmailField(max_length=254, unique=True, validators=[calendar_api.validators.checkDns])),
            ],
            options={
                'permissions': [('profissional_list', 'Pode Listar todos Profissionais na API'), ('profissional_retrieve', 'Pode recuperar um registro Profissional na API'), ('profissional_update', 'Pode atualizar Profissional na API'), ('profissional_partial_update', 'Pode atualizar parcialmente Prrofissional na API'), ('profissional_create', 'Pode criar Profissionais na API'), ('profissional_destroy', 'Pode destruir Profissionais na API')],
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoAgendamento',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('data_consulta', models.DateField()),
                ('hora_inicio_consulta', models.TimeField()),
                ('paciente_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calendar_api.paciente')),
                ('procedimento_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calendar_api.procedimento')),
                ('profissional_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calendar_api.profissional')),
            ],
            options={
                'permissions': [('solicitacao_agendamento_list', 'Pode Listar todos Solicitacao_agendamento na API'), ('solicitacao_agendamento_retrieve', 'Pode recuperar um registro Solicitacao_agendamento na API'), ('solicitacao_agendamento_update', 'Pode atualizar Solicitacao_agendamento na API'), ('solicitacao_agendamento_partial_update', 'Pode atualizar parcialmente Solicitacao_agendamento na API'), ('solicitacao_agendamento_create', 'Pode criar Solicitacao_agendamento na API'), ('solicitacao_agendamento_destroy', 'Pode destruir Solicitacao_agendamento na API')],
            },
        ),
        migrations.CreateModel(
            name='Prontuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField()),
                ('paciente_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendar_api.paciente')),
                ('profissional_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendar_api.profissional')),
            ],
            options={
                'permissions': [('prontuario_list', 'Pode Listar todos prontuarios na API'), ('prontuario_retrieve', 'Pode recuperar um registro prontuario na API'), ('prontuario_update', 'Pode atualizar Prontuario na API'), ('prontuario_partial_update', 'Pode atualizar parcialmente Prontuario na API'), ('prontuario_create', 'Pode criar Prontuario na API'), ('prontuario_destroy', 'Pode destruir Prontuario na API')],
            },
        ),
        migrations.CreateModel(
            name='ProfissionalProcedimento',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tempo_duracao', models.DurationField()),
                ('procedimento_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calendar_api.procedimento')),
                ('profissional_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calendar_api.profissional')),
            ],
            options={
                'permissions': [('profissional_procedimento_list', 'Pode Listar todos Profissional_procedimento na API'), ('profissional_procedimento_retrieve', 'Pode recuperar um registro Profissional_procedimento na API'), ('profissional_procedimento_update', 'Pode atualizar Profissional_procedimento na API'), ('profissional_procedimento_partial_update', 'Pode atualizar parcialmente Profissional_procedimento na API'), ('profissional_procedimento_create', 'Pode criar Profissional_procedimento na API'), ('profissional_procedimento_destroy', 'Pode destruir Profissional_procedimento na API')],
            },
        ),
        migrations.CreateModel(
            name='HorariosAtendimento',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('dia_da_semana', models.CharField(choices=[('2a', 'Segunda-feira'), ('3a', 'Terça-feira'), ('4a', 'Quarta-feira'), ('5a', 'Quinta-feira'), ('6a', 'Sexta-feira'), ('Sab', 'Sábado'), ('Dom', 'Domingo')], max_length=3, validators=[calendar_api.validators.validate_days_of_week])),
                ('inicio', models.TimeField()),
                ('fim', models.TimeField()),
                ('profissional_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calendar_api.profissional')),
            ],
            options={
                'permissions': [('horario_atendimento_list', 'Pode Listar todos Horarios de atendimento na API'), ('horario_atendimento_retrieve', 'Pode recuperar um registro Horarios de atendimento na API'), ('horario_atendimento_update', 'Pode atualizar Horarios de atendimento na API'), ('horario_atendimento_partial_update', 'Pode atualizar parcialmente Horarios de atendimento na API'), ('horario_atendimento_create', 'Pode criar Horarios de atendimento na API'), ('horario_atendimento_destroy', 'Pode destruir Horarios de atendimento na API')],
            },
        ),
    ]
